on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
  workflow_dispatch:
    

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            node_modules
            client/node_modules
            server/node_modules
            test/integration/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Lint
        run: yarn lint

      - name: Download foundryup
        run: curl -L https://foundry.paradigm.xyz | bash

      - name: Install foundry
        run: ~/.foundry/bin/foundryup

      - name: Run server tests
        run: yarn run test:codecov

      - name: Cache VS Code client
        id: cache-vscode
        uses: actions/cache@v3
        env:
          cache-name: cache-vscode
        with:
          path: .vscode-test
          key: ${{ runner.os }}-vscode-1.70.2

      - name: Run integration tests
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: yarn run test:integration
        env:
          CODE_VERSION: ${{ matrix.version }}
          VSCODEGO_BEFORE_RELEASE_TESTS: true

      - name: Package the extension
        run: yarn run package
